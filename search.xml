<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建HEXO</title>
      <link href="/2019/06/05/da-jian-hexo/"/>
      <url>/2019/06/05/da-jian-hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="认识-Hexo"><a href="#认识-Hexo" class="headerlink" title="认识 Hexo"></a>认识 Hexo</h2><p>hexo是一个快速，简洁高效的博客框架。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1.node：用来生成静态页面的 到Node.js官网下载相应平台的最新版本。<br>2.git: 把本地的hexo内容提交到github上去。<br>3.github：用来做博客的远程创库、域名、服务器。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：</p><blockquote><p>$ sudo npm install -g hexo</p></blockquote><p>输入管理员密码即开始安装</p><blockquote><p>Hexo官网上的安装命令是$ npm install -g hexo-cli，安装时不要忘记前面加上sudo，否则会因为权限问题报错。<br>初始化</p></blockquote><p>终端cd到一个你选定的目录（比如创建一个blog文件，$cd blog），执行hexo init命令：</p><blockquote><p>$ hexo init</p></blockquote><p>在blog目录下，执行如下命令，安装npm：</p><blockquote><p>$ npm install</p></blockquote><p>执行如下命令，开启hexo服务器：</p><blockquote><p>$ hexo s</p></blockquote><p>此时，浏览器中打开网址<a href="http://localhost:4000，能看到如下页面：" target="_blank" rel="noopener">http://localhost:4000，能看到如下页面：</a><br><img src="https://raw.githubusercontent.com/edderqin/picflod/master/img/hexo01.png" alt="hexo01"></p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>登录Github账号，新建仓库，名为用户名.github.io固定写法。<br><img src="https://raw.githubusercontent.com/edderqin/picflod/master/img/hexo02.png" alt="hexo02"></p><p>找到blog文件夹下的_config.yml文件找到最后一行修改为（更多yml部署查阅Hexo文档） </p><blockquote><p>deploy:<br>    type: git<br>    repository: <a href="https://github.com/edderqin/edderqin.github.io.git" target="_blank" rel="noopener">https://github.com/edderqin/edderqin.github.io.git</a><br>    branch: master</p></blockquote><p>注意：在配置所有的_config.yml文件时（包括theme中的），在所有的冒号:后边都要加一个空格，否则执行hexo命令会报错，切记 切记</p><p>在blog文件夹目录下执行生成静态页面命令：</p><blockquote><p>$ hexo generate        或者：hexo g</p></blockquote><p>再执行配置命令：</p><blockquote><p>$ hexo deploy            或者：hexo d</p></blockquote><p>注意：若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：<br>$ npm install hexo-deployer-git –save<br>若你未关联Github，则执行hexo deploy命令时终端会提示你输入Github的用户名和密码<br>hexo deploy命令执行成功后，浏览器中打开网址<a href="http://edderqin.github.io（将edderqin换成你的用户名）能看到和打开http://localhost:4000时一样的页面。" target="_blank" rel="noopener">http://edderqin.github.io（将edderqin换成你的用户名）能看到和打开http://localhost:4000时一样的页面。</a>　</p><h2 id="添加ssh-key到Github"><a href="#添加ssh-key到Github" class="headerlink" title="添加ssh key到Github"></a>添加ssh key到Github</h2><p>1.1检查SSH keys是否存在Github<br>执行如下命令，检查SSH keys是否存在。如果有文件id_rsa.pub或id_dsa.pub，则直接进入步骤1.3将SSH key添加到Github中，否则进入下一步生成SSH key。</p><blockquote><p>$ ls -al ~/.ssh</p></blockquote><p>1.2.生成新的ssh key<br>执行如下命令生成public/private rsa key pair，注意将<a href="mailto:your_email@example.com" target="_blank" rel="noopener">your_email@example.com</a>换成你自己注册Github的邮箱地址。</p><blockquote><p>$ ssh-keygen -t rsa -C “<a href="mailto:your_email@example.com" target="_blank" rel="noopener">your_email@example.com</a>“默认会在相应路径下C盘用户目录下（~/.ssh/id_rsa.pub）生成id_rsa和id_rsa.pub两个文件</p></blockquote><p>1.3.将ssh key添加到Github中<br>Find前往文件夹~/.ssh/id_rsa.pub打开id_rsa.pub文件，里面的信息即为SSH key，将这些信息复制到Github的Add SSH key页面即可。<br>进入Github –&gt; Settings –&gt; SSH keys –&gt; add SSH key:<br>Title里任意添一个标题，将复制的内容粘贴到Key里，点击下方Add key绿色按钮即可。<br><img src="https://raw.githubusercontent.com/edderqin/picflod/master/img/hexo03.png" alt="hexo03"></p><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p>终端cd到blog文件夹下，执行如下命令新建文章：</p><blockquote><p>hexo new “postName”</p></blockquote><p>名为postName.md的文件会建在目录/blog/source/_posts下。<br>文章编辑完成后，终端cd到blog文件夹下，执行如下命令来发布: </p><blockquote><p>hexo g             //生成静态页面<br>hexo d            //将文章部署到Github</p></blockquote><h2 id="安装theme"><a href="#安装theme" class="headerlink" title="安装theme"></a>安装theme</h2><p>你可以到Hexo官网主题页去搜寻自己喜欢的theme。这里以hexo-theme-next为例<br>终端cd到 blog 目录下执行如下命令：</p><blockquote><p>$ git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p></blockquote><p>将blog目录下_config.yml里theme的名称landscape修改为next<br>终端cd到blog目录下执行如下命令(每次部署文章的步骤)：</p><blockquote><p>$ hexo clean           //清除缓存文件 (db.json) 和已生成的静态文件 (public)<br>$ hexo g             //生成缓存和静态文件<br>$ hexo d             //重新部署到服务器</p></blockquote><p>至于更改theme内容，比如名称，描述，头像等去修改blog/_config.yml文件和blog/themes/next/_config.yml文件中对应的属性名称即可，不要忘记冒号:后加空格。NexT 使用文档里有极详细的介绍。</p><h2 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h2><p>首先要有一个域名我的域名是在阿里云买的<br><img src="https://raw.githubusercontent.com/edderqin/picflod/master/img/hexo04.png" alt="hexo04"></p><p>审核通过后进行解析<br><img src="https://raw.githubusercontent.com/edderqin/picflod/master/img/hexo06.png" alt="hexo06"><br>添加三条解析 后两条固定为，192.30.252.153和192.30.252.154这两个IP地址为github的服务器地址 CNAME记录值填你的github博客网址<br>这些全部设置完成后，此时你并不能要申请的域名访问你的博客。接着你需要做的是在hexo根目录的source文件夹里创建CNAME文件，不带任何后缀，里面添加你的域名信息 如 edderblog.top<br><img src="https://raw.githubusercontent.com/edderqin/picflod/master/img/hexo07.png" alt="hexo07"><br>接下来输入域名即可访问项目</p><p>参考资料:<br><a href="https://www.cnblogs.com/penglei-it/p/hexo_domain_name.html" target="_blank" rel="noopener">https://www.cnblogs.com/penglei-it/p/hexo_domain_name.html</a> hexo域名配置<br><a href="https://www.cnblogs.com/MuYunyun/p/5927491.html" target="_blank" rel="noopener">https://www.cnblogs.com/MuYunyun/p/5927491.html</a> 建站参考<br><a href="https://www.cnblogs.com/fengxiongZz/p/7707219.html" target="_blank" rel="noopener">https://www.cnblogs.com/fengxiongZz/p/7707219.html</a> 建站详细资料<br><a href="https://easyhexo.com/https://easyhexo.com/" target="_blank" rel="noopener">https://easyhexo.com/https://easyhexo.com/</a> eazy hexo</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/06/04/hello-world/"/>
      <url>/2019/06/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
